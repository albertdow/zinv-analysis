from collections import OrderedDict as odict

datasets = odict([
    ("MET", [
        "MET_Run2016B_v1",
        "MET_Run2016B_v2",
        "MET_Run2016C_v1",
        "MET_Run2016D_v1",
        "MET_Run2016E_v1",
        "MET_Run2016F_v1",
        "MET_Run2016G_v1",
        "MET_Run2016H_v2",
        "MET_Run2016H_v3",
    ]),
    ("SingleMuon", [
        "SingleMuon_Run2016B_v1",
        "SingleMuon_Run2016B_v2",
        "SingleMuon_Run2016C_v1",
        "SingleMuon_Run2016D_v1",
        "SingleMuon_Run2016E_v1",
        "SingleMuon_Run2016F_v1",
        "SingleMuon_Run2016G_v1",
        "SingleMuon_Run2016H_v2",
        "SingleMuon_Run2016H_v3",
    ]),
    ("SingleElectron", [
        "SingleElectron_Run2016B_v1",
        "SingleElectron_Run2016B_v2",
        "SingleElectron_Run2016C_v1",
        "SingleElectron_Run2016D_v1",
        "SingleElectron_Run2016E_v1",
        "SingleElectron_Run2016F_v1",
        "SingleElectron_Run2016G_v1",
        "SingleElectron_Run2016H_v2",
        "SingleElectron_Run2016H_v3",
    ]),
    ("TTJets", ["TTJets_Inclusive"]),
    ("WJetsToLNu", [
        "WJetsToLNu_Pt-0To50",
        "WJetsToLNu_Pt-50To100",
        "WJetsToLNu_Pt-100To250",
        "WJetsToLNu_Pt-100To250_ext1",
        "WJetsToLNu_Pt-100To250_ext2",
        "WJetsToLNu_Pt-250To400",
        "WJetsToLNu_Pt-250To400_ext1",
        "WJetsToLNu_Pt-250To400_ext2",
        "WJetsToLNu_Pt-400To600",
        "WJetsToLNu_Pt-400To600_ext1",
        "WJetsToLNu_Pt-600ToInf",
        "WJetsToLNu_Pt-600ToInf_ext1",
    ]),
    ("WJetsToENu", [
        "WJetsToENu_Pt-0To50",
        "WJetsToENu_Pt-50To100",
        "WJetsToENu_Pt-100To250",
        "WJetsToENu_Pt-100To250_ext1",
        "WJetsToENu_Pt-100To250_ext2",
        "WJetsToENu_Pt-250To400",
        "WJetsToENu_Pt-250To400_ext1",
        "WJetsToENu_Pt-250To400_ext2",
        "WJetsToENu_Pt-400To600",
        "WJetsToENu_Pt-400To600_ext1",
        "WJetsToENu_Pt-600ToInf",
        "WJetsToENu_Pt-600ToInf_ext1",
    ]),
    ("WJetsToMuNu", [
        "WJetsToMuNu_Pt-0To50",
        "WJetsToMuNu_Pt-50To100",
        "WJetsToMuNu_Pt-100To250",
        "WJetsToMuNu_Pt-100To250_ext1",
        "WJetsToMuNu_Pt-100To250_ext2",
        "WJetsToMuNu_Pt-250To400",
        "WJetsToMuNu_Pt-250To400_ext1",
        "WJetsToMuNu_Pt-250To400_ext2",
        "WJetsToMuNu_Pt-400To600",
        "WJetsToMuNu_Pt-400To600_ext1",
        "WJetsToMuNu_Pt-600ToInf",
        "WJetsToMuNu_Pt-600ToInf_ext1",
    ]),
    ("WJetsToTauNu", [
        "WJetsToTauNu_Pt-0To50",
        "WJetsToTauNu_Pt-50To100",
        "WJetsToTauNu_Pt-100To250",
        "WJetsToTauNu_Pt-100To250_ext1",
        "WJetsToTauNu_Pt-100To250_ext2",
        "WJetsToTauNu_Pt-250To400",
        "WJetsToTauNu_Pt-250To400_ext1",
        "WJetsToTauNu_Pt-250To400_ext2",
        "WJetsToTauNu_Pt-400To600",
        "WJetsToTauNu_Pt-400To600_ext1",
        "WJetsToTauNu_Pt-600ToInf",
        "WJetsToTauNu_Pt-600ToInf_ext1",
    ]),
    ("ZJetsToNuNu", [
        "ZJetsToNuNu_Pt-0To50",
        "ZJetsToNuNu_Pt-50To100",
        "ZJetsToNuNu_Pt-100To250",
        "ZJetsToNuNu_Pt-100To250_ext1",
        "ZJetsToNuNu_Pt-100To250_ext2",
        "ZJetsToNuNu_Pt-250To400",
        "ZJetsToNuNu_Pt-250To400_ext1",
        "ZJetsToNuNu_Pt-250To400_ext2",
        "ZJetsToNuNu_Pt-400To650",
        "ZJetsToNuNu_Pt-400To650_ext1",
        "ZJetsToNuNu_Pt-650ToInf",
        "ZJetsToNuNu_Pt-650ToInf_ext1",
    ]),
    ("QCD", [
        "QCD_Pt-15To30",
        "QCD_Pt-30To50",
        "QCD_Pt-50To80",
        "QCD_Pt-80To120",
        "QCD_Pt-80To120_ext1",
        "QCD_Pt-120To170",
        "QCD_Pt-120To170_ext1",
        "QCD_Pt-170To300",
        "QCD_Pt-170To300_ext1",
        "QCD_Pt-300To470",
        "QCD_Pt-300To470_ext1",
        "QCD_Pt-470To600",
        "QCD_Pt-600To800",
        "QCD_Pt-600To800_ext1",
        "QCD_Pt-800To1000",
        "QCD_Pt-800To1000_ext1",
        "QCD_Pt-1000To1400",
        "QCD_Pt-1000To1400_ext1",
        "QCD_Pt-1400To1800",
        "QCD_Pt-1400To1800_ext1",
        "QCD_Pt-1800To2400",
        "QCD_Pt-1800To2400_ext1",
        "QCD_Pt-2400To3200",
        "QCD_Pt-2400To3200_ext1",
        "QCD_Pt-3200ToInf",
    ]),
    ("DYJetsToLL", [
        "DYJetsToLL_Pt-0To50",
        "DYJetsToLL_Pt-50To100",
        "DYJetsToLL_Pt-50To100_ext1",
        "DYJetsToLL_Pt-100To250",
        "DYJetsToLL_Pt-100To250_ext1",
        "DYJetsToLL_Pt-100To250_ext2",
        "DYJetsToLL_Pt-100To250_ext3",
        "DYJetsToLL_Pt-250To400",
        "DYJetsToLL_Pt-250To400_ext1",
        "DYJetsToLL_Pt-250To400_ext2",
        "DYJetsToLL_Pt-250To400_ext3",
        "DYJetsToLL_Pt-400To650",
        "DYJetsToLL_Pt-400To650_ext1",
        "DYJetsToLL_Pt-400To650_ext2",
        "DYJetsToLL_Pt-650ToInf",
        "DYJetsToLL_Pt-650ToInf_ext1",
        "DYJetsToLL_Pt-650ToInf_ext2",
    ]),
    ("DYJetsToEE", [
        "DYJetsToEE_Pt-0To50",
        "DYJetsToEE_Pt-50To100",
        "DYJetsToEE_Pt-50To100_ext1",
        "DYJetsToEE_Pt-100To250",
        "DYJetsToEE_Pt-100To250_ext1",
        "DYJetsToEE_Pt-100To250_ext2",
        "DYJetsToEE_Pt-100To250_ext3",
        "DYJetsToEE_Pt-250To400",
        "DYJetsToEE_Pt-250To400_ext1",
        "DYJetsToEE_Pt-250To400_ext2",
        "DYJetsToEE_Pt-250To400_ext3",
        "DYJetsToEE_Pt-400To650",
        "DYJetsToEE_Pt-400To650_ext1",
        "DYJetsToEE_Pt-400To650_ext2",
        "DYJetsToEE_Pt-650ToInf",
        "DYJetsToEE_Pt-650ToInf_ext1",
        "DYJetsToEE_Pt-650ToInf_ext2",
    ]),
    ("DYJetsToMuMu", [
        "DYJetsToMuMu_Pt-0To50",
        "DYJetsToMuMu_Pt-50To100",
        "DYJetsToMuMu_Pt-50To100_ext1",
        "DYJetsToMuMu_Pt-100To250",
        "DYJetsToMuMu_Pt-100To250_ext1",
        "DYJetsToMuMu_Pt-100To250_ext2",
        "DYJetsToMuMu_Pt-100To250_ext3",
        "DYJetsToMuMu_Pt-250To400",
        "DYJetsToMuMu_Pt-250To400_ext1",
        "DYJetsToMuMu_Pt-250To400_ext2",
        "DYJetsToMuMu_Pt-250To400_ext3",
        "DYJetsToMuMu_Pt-400To650",
        "DYJetsToMuMu_Pt-400To650_ext1",
        "DYJetsToMuMu_Pt-400To650_ext2",
        "DYJetsToMuMu_Pt-650ToInf",
        "DYJetsToMuMu_Pt-650ToInf_ext1",
        "DYJetsToMuMu_Pt-650ToInf_ext2",
    ]),
    ("DYJetsToTauTau", [
        "DYJetsToTauTau_Pt-0To50",
        "DYJetsToTauTau_Pt-50To100",
        "DYJetsToTauTau_Pt-50To100_ext1",
        "DYJetsToTauTau_Pt-100To250",
        "DYJetsToTauTau_Pt-100To250_ext1",
        "DYJetsToTauTau_Pt-100To250_ext2",
        "DYJetsToTauTau_Pt-100To250_ext3",
        "DYJetsToTauTau_Pt-250To400",
        "DYJetsToTauTau_Pt-250To400_ext1",
        "DYJetsToTauTau_Pt-250To400_ext2",
        "DYJetsToTauTau_Pt-250To400_ext3",
        "DYJetsToTauTau_Pt-400To650",
        "DYJetsToTauTau_Pt-400To650_ext1",
        "DYJetsToTauTau_Pt-400To650_ext2",
        "DYJetsToTauTau_Pt-650ToInf",
        "DYJetsToTauTau_Pt-650ToInf_ext1",
        "DYJetsToTauTau_Pt-650ToInf_ext2",
    ]),
    ("Diboson", [
        "WWTo1L1Nu2Q",
        "WWTo2L2Nu",
        "WWTo4Q",
        "WZTo1L1Nu2Q",
        "WZTo1L3Nu",
        "WZTo1L3Nu_ext1",
        "WZTo2L2Q",
        "WZTo2Q2Nu",
        "WZTo3L1Nu",
        "ZZTo2L2Nu",
        "ZZTo2L2Nu_ext1",
        "ZZTo2L2Q",
        "ZZTo2Q2Nu",
        "ZZTo4L",
        "ZZTo4Q",
    ]),
    ("SingleTop", [
        "SingleTop_s-channel_InclusiveDecays",
        "SingleTop_t-channel_antitop_InclusiveDecays",
        "SingleTop_t-channel_top_InclusiveDecays",
        "SingleTop_tW_antitop_InclusiveDecays",
        "SingleTop_tW_top_InclusiveDecays",
    ]),
    ("EWKV2Jets", [
        "EWKWMinusToLNu2Jets",
        "EWKWMinusToLNu2Jets_ext1",
        "EWKWMinusToLNu2Jets_ext2",
        "EWKWPlusToLNu2Jets",
        "EWKWPlusToLNu2Jets_ext1",
        "EWKWPlusToLNu2Jets_ext2",
        "EWKZToLL2Jets",
        "EWKZToLL2Jets_ext1",
        "EWKZToLL2Jets_ext2",
        "EWKZToNuNu2Jets",
        "EWKZToNuNu2Jets_ext1",
        "EWKZToNuNu2Jets_ext2",
    ]),
    ("G1Jet", [
        "G1Jet_Pt-50To100",
        "G1Jet_Pt-50To100_ext1",
        "G1Jet_Pt-100To250",
        "G1Jet_Pt-100To250_ext1",
        "G1Jet_Pt-100To250_ext2",
        "G1Jet_Pt-250To400",
        "G1Jet_Pt-250To400_ext1",
        "G1Jet_Pt-250To400_ext2",
        "G1Jet_Pt-400To650",
        "G1Jet_Pt-400To650_ext1",
        "G1Jet_Pt-650ToInf",
        "G1Jet_Pt-650ToInf_ext1",
    ]),
    ("VGamma", [
        "WGToLNuG",
        "WGToQQG",
        "ZGToLLG",
        "ZGToNuNuG",
        "ZGToQQG",
    ]),
])

import glob
from atuproot.Dataset import Dataset
from xsection import xsdict

for key, names in datasets.items():
    for name in names:
        if name not in xsdict and "Run2016" not in name:
            raise KeyError("No XS for {}".format(name))

input_path = "/vols/cms/ZinvWidth/NanoAOD/201806_Jun/data/{}/trees/*.root"
datasets = [Dataset(name = name,
                    parent = key,
                    isdata = True if "Run2016" in name else False,
                    xsection = xsdict[name] if name in xsdict else 1.,
                    files = [p for p in glob.glob(input_path.format(name))])
            for key, names in datasets.items()
            for name in names]
